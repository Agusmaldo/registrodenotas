<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Estado', 'doctrine');

/**
 * BaseEstado
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $descripcion
 * @property boolean $activo
 * @property Doctrine_Collection $Movimientos
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getDescripcion() Returns the current record's "descripcion" value
 * @method boolean             getActivo()      Returns the current record's "activo" value
 * @method Doctrine_Collection getMovimientos() Returns the current record's "Movimientos" collection
 * @method Estado          setId()          Sets the current record's "id" value
 * @method Estado          setDescripcion() Sets the current record's "descripcion" value
 * @method Estado          setActivo()      Sets the current record's "activo" value
 * @method Estado          setMovimientos() Sets the current record's "Movimientos" collection
 * 
 * @package    ferro05
 * @subpackage model
 * @author     NMP
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOrganismo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('organismo');
        $this->hasColumn('id', 'integer', 10, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 10,
             ));
        $this->hasColumn('descripcion', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('activo', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Movimiento as Movimientos', array(
             'local' => 'id',
             'foreign' => 'organismo_id'));
    }
}
